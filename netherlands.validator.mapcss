meta {
    title: "Dutch specific rules";
    version: "2022.05.23";
    description: "Rules for The Netherlands only.";
    author: "Famlam";
    min-josm-version: "11424"; /* due to territory selectors */
    link: "https://forum.openstreetmap.org/viewtopic.php?id=74817";
}
/* 
github: https://github.com/Famlam/OsmMapcssValidationNL/blob/main/netherlands.validator.mapcss
*/


/* --------------------------- */
/* ------ Traffic signs ------ */
/* --------------------------- */

/* Traffic signs - moped/mofa access cycleways */
/* (Permitting yes rather than designated to prevent overflooding with errors) */
way[highway=cycleway][traffic_sign="NL:G11"][moped][moped=~/^(yes|designated)$/],
way[highway=cycleway][traffic_sign="NL:G12a"][moped][moped=~/^(no|use_sidepath)$/],
way[highway=cycleway][traffic_sign="NL:G12a"][mofa][mofa=~/^(no|use_sidepath)$/],
way[highway=cycleway][traffic_sign="NL:G13"][moped][moped=~/^(yes|designated)$/],
way[highway=cycleway][traffic_sign="NL:G13"][mofa][mofa=~/^(yes|designated)$/],
way[highway][traffic_sign="NL:D103"][moped][moped=~/^(no|use_sidepath)$/][highway!=construction],
way[highway][traffic_sign="NL:D104"][moped][moped=~/^(no|use_sidepath)$/][highway!=construction] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} together with {1}", "{1.tag}", "{2.tag}");
}

way[highway][traffic_sign="NL:D103"][!moped],
way[highway][traffic_sign="NL:D104"][!moped],
way[highway=cycleway][traffic_sign="NL:G12a"][!moped] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} without {1}", "{1.tag}", "moped=designated");
}

/* note: mind the Amsterdam-case: snorfietsers op de weg */
way[highway=cycleway][traffic_sign="NL:G11"][!mofa],
way[highway=cycleway][traffic_sign="NL:G12a"][!mofa] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} without {1}", "{1.tag}", "{2.key}");
}

way[highway=cycleway][traffic_sign="NL:G13"][!mofa][!motor_vehicle][!access] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} without {1}", "{1.tag}", "mofa=no");
}


/* Traffic signs - bus/hgv access */
way[highway][traffic_sign="NL:F13"][!bus][!psv][highway!=busway][highway!=bus_guideway],
way[highway][traffic_sign="NL:F17"][!bus][!psv][highway!=busway][highway!=bus_guideway],
way[highway][traffic_sign="NL:F19"][!bus][!psv][highway!=busway][highway!=bus_guideway],
way[highway][traffic_sign="NL:F19"][!hgv],
way[highway][traffic_sign="NL:F21"][!hgv] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} without {1}", "{1.tag}", "{2.key}=designated");
  fixAdd: "{2.key}=designated";
}

way[highway][traffic_sign="NL:F13"][bus=no][highway!=construction],
way[highway][traffic_sign="NL:F17"][bus=no][highway!=construction],
way[highway][traffic_sign="NL:F19"][bus=no][highway!=construction],
way[highway][traffic_sign="NL:F13"][psv=no][!bus][highway!=construction],
way[highway][traffic_sign="NL:F17"][psv=no][!bus][highway!=construction],
way[highway][traffic_sign="NL:F19"][psv=no][!bus][highway!=construction],
way[highway][traffic_sign="NL:F19"][hgv=no][highway!=construction],
way[highway][traffic_sign="NL:F21"][hgv=no][highway!=construction] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} together with {1}", "{1.tag}", "{2.tag}");
}


/* Traffic sign - road types */
way[highway][traffic_sign="NL:F13"][highway!=busway][highway!=service][highway!=bus_guideway][highway!=construction],
way[highway][traffic_sign="NL:G5"][highway!=living_street][highway!=construction],
way[highway][traffic_sign="NL:G05"][highway!=living_street][highway!=construction],
way[highway][traffic_sign="NL:G7"][highway!=footway][highway!=steps][highway!=pedestrian][highway!=construction],
way[highway][traffic_sign="NL:G07"][highway!=footway][highway!=steps][highway!=pedestrian][highway!=construction],
way[highway][traffic_sign="NL:G9"][highway!=bridleway][highway!=construction],
way[highway][traffic_sign="NL:G09"][highway!=bridleway][highway!=construction],
way[highway][traffic_sign="NL:G11"][highway!=cycleway][highway!=construction],
way[highway][traffic_sign="NL:G12a"][highway!=cycleway][highway!=construction],
way[highway][traffic_sign="NL:G13"][highway!=cycleway][highway!=construction] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} together with {1}", "{1.tag}", "{0.tag}");
}

way[highway][traffic_sign="NL:L51"][!cyclestreet][highway!=construction] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} without {1}", "{1.tag}", "cyclestreet=yes");
}


/* Traffic signs - access prohibited */
way[highway][traffic_sign="NL:C1"][!vehicle][!vehicle:forward][!vehicle:backward][!vehicle:both_ways][!access][!access:forward][!access:backward][!access:both_ways],
way[highway][traffic_sign="NL:C01"][!vehicle][!vehicle:forward][!vehicle:backward][!vehicle:both_ways][!access][!access:forward][!access:backward][!access:both_ways],
way[highway][traffic_sign="NL:C6"][!motor_vehicle][!motor_vehicle:forward][!motor_vehicle:backward][!motor_vehicle:both_ways][!vehicle][!vehicle:forward][!vehicle:backward][!vehicle:both_ways][!access][!access:forward][!access:backward][!access:both_ways],
way[highway][traffic_sign="NL:C06"][!motor_vehicle][!motor_vehicle:forward][!motor_vehicle:backward][!motor_vehicle:both_ways][!vehicle][!vehicle:forward][!vehicle:backward][!vehicle:both_ways][!access][!access:forward][!access:backward][!access:both_ways],
way[highway][traffic_sign="NL:C7"][!hgv][!hgv:forward][!hgv:backward][!hgv:both_ways],
way[highway][traffic_sign="NL:C07"][!hgv][!hgv:forward][!hgv:backward][!hgv:both_ways],
way[highway][traffic_sign="NL:C9"][!bicycle][!bicycle:forward][!bicycle:backward][!bicycle:both_ways],
way[highway][traffic_sign="NL:C9"][!moped][!moped:forward][!moped:backward][!moped:both_ways],
way[highway][traffic_sign="NL:C09"][!bicycle][!bicycle:forward][!bicycle:backward][!bicycle:both_ways],
way[highway][traffic_sign="NL:C09"][!moped][!moped:forward][!moped:backward][!moped:both_ways],
way[highway][traffic_sign="NL:C10"][!trailer][!trailer:forward][!trailer:backward][!trailer:both_ways],
way[highway][traffic_sign="NL:C11"][!motorcycle][!motorcycle:forward][!motorcycle:backward][!motorcycle:both_ways],
way[highway][traffic_sign="NL:C12"][!motor_vehicle][!motor_vehicle:forward][!motor_vehicle:backward][!motor_vehicle:both_ways][!vehicle][!vehicle:forward][!vehicle:backward][!vehicle:both_ways][!access][!access:forward][!access:backward][!access:both_ways],
way[highway][traffic_sign="NL:C13"][!moped][!moped:forward][!moped:backward][!moped:both_ways],
way[highway][traffic_sign="NL:C14"][!bicycle][!bicycle:forward][!bicycle:backward][!bicycle:both_ways],
way[highway][traffic_sign="NL:C15"][!bicycle][!bicycle:forward][!bicycle:backward][!bicycle:both_ways],
way[highway][traffic_sign="NL:C15"][!moped][!moped:forward][!moped:backward][!moped:both_ways],
way[highway][traffic_sign="NL:C16"][!foot][!foot:forward][!foot:backward][!foot:both_ways][!access][!access:forward][!access:backward][!access:both_ways][!vehicle][!vehicle:forward][!vehicle:backward][!vehicle:both_ways] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} zonder {1}=no (or private or destination or ...)", "{1.tag}", "{2.key}");
}


/* ---------------------------- */
/* -- Addresses and contacts -- */
/* ---------------------------- */

/* Phone numbers - preceding zeros */
node[contact:phone=~/^(00|\+)31 ?0/][inside("NL")],
node[contact:mobile=~/^(00|\+)31 ?0/][inside("NL")],
node[phone=~/^(00|\+)31 ?0/][inside("NL")] {
  throwWarning: tr("Invalid {0}: country code should not be followed by a 0", "{0.key}");
  group: tr("NL addresses and contacts");
  assertMatch: "node phone=\"+31 06123456789\"";
  assertMatch: "node phone=\"003106123456789\"";
  assertNoMatch: "node phone=\"00316123456789\"";
  assertNoMatch: "node phone=\"+31 6123456789\"";
  assertNoMatch: "node phone=\"06123456789\"";
  set .badPhoneNumber;
}


/* Phone numbers - too many digits */
node[contact:phone=~/^(0031|\+31|0)( ?[1-9])( ?[0-9]){9}/][inside("NL")]!.badPhoneNumber,
node[contact:mobile=~/^(0031|\+31|0)( ?[1-9])( ?[0-9]){9}/][inside("NL")]!.badPhoneNumber,
node[phone=~/^(0031|\+31|0)( ?[1-9])( ?[0-9]){9}/][inside("NL")]!.badPhoneNumber {
  throwWarning: tr("Invalid {0}: too many digits (or foreign number, if so: ignore)", "{0.key}");
  group: tr("NL addresses and contacts");
  assertMatch: "node phone=\"+316123456789\"";
  assertMatch: "node phone=\"+31 6 123456789\"";
  assertMatch: "node phone=\"06 123456789\"";
  assertNoMatch: "node phone=\"0031612345678\"";
  assertNoMatch: "node phone=\"+31 6 12345678\"";
  assertNoMatch: "node phone=\"06 12345678\"";
}


/* addresss tags on building */
relation[type=multipolygon][building][/^addr:/][amenity!=place_of_worship][inside("NL")],
way[building][/^addr:/][amenity!=place_of_worship][inside("NL")]:closed {
  throwWarning: tr("In Nederland is het gebouw niet gekoppeld aan het adres. Het adres is wel gekoppeld aan het gebruiksdoel.");
  group: tr("NL addresses and contacts");
}


/* Postcodes using invalid format */
node["addr:postcode"]["addr:postcode"!~/[0-9]{4} ?[A-Z]{2}/][inside("NL")] {
  throwWarning: tr("Invalid {0}: expected 4 digits followed by 2 letters", "{0.tag}");
  group: tr("NL addresses and contacts");
}


/* --------------------------- */
/* -- Foreign style tagging -- */
/* --------------------------- */

/* Unwanted German style cycleway and footway tagging */
/* https://forum.openstreetmap.org/viewtopic.php?id=65612 */
way[cycleway:surface][surface][highway=cycleway][surface=*"cycleway:surface"][inside("NL")],
way[footway:surface][surface][highway=footway][surface=*"footway:surface"][inside("NL")] {
  throwWarning: tr("{0} together with {1} and {2}. Remove {0}.", "{0.key}", "{1.key}", "{2.tag}");
  group: tr("NL German style tagging");
  fixRemove: "{0.key}";
}

way[cycleway:surface][surface][highway=cycleway][surface!=*"cycleway:surface"][inside("NL")],
way[footway:surface][surface][highway=footway][surface!=*"footway:surface"][inside("NL")] {
  throwWarning: tr("{0} and {1} together with {2} and conflicting values", "{0.key}", "{1.key}", "{2.tag}");
  group: tr("NL German style tagging");
}

way[cycleway:surface][highway=cycleway][!surface][inside("NL")],
way[footway:surface][highway=footway][!surface][inside("NL")] {
  throwWarning: tr("{0} together with {1}", "{0.key}", "{1.tag}");
  group: tr("NL German style tagging");
  suggestAlternative: "surface=*";
  fixChangeKey: "{0.key}=>surface";
}

way[footway:surface][cycleway:surface][segregated=no][highway][footway:surface!=*"cycleway:surface"][inside("NL")] {
  throwWarning: tr("{0} and {1} together with {2} and conflicting values", "{0.key}", "{1.key}", "{2.tag}");
  group: tr("NL German style tagging");
}

way[/^footway(:left|:right|:both)?:/][/^sidewalk:(left|right|both)$/][/^sidewalk:(left|right|both)$/=~/^yes$/][inside("NL")],
way[/^footway(:left|:right|:both)?:/][sidewalk][sidewalk=~/^(left|right|both|yes)$/][inside("NL")] {
  throwWarning: tr("{0} together with {1}", "{0.key}", "{1.key}");
  group: tr("NL German style tagging");
  suggestAlternative: "sidewalk:*";
}


/* -------------------------------- */
/* -- Tags considered deprecated -- */
/* -------------------------------- */

/* cycleway=opposite */
/* https://forum.openstreetmap.org/viewtopic.php?id=65612 */
way[cycleway=opposite][inside("NL")],
way[cycleway:left=opposite][inside("NL")],
way[cycleway:right=opposite][inside("NL")],
way[cycleway:both=opposite][inside("NL")] {
  throwWarning: tr("{0} is deprecated", "{0.value}");
  group: tr("NL deprecated features");
  suggestAlternative: "oneway:bicycle/mofa/moped=no";
}

way[cycleway][cycleway^=opposite_][inside("NL")],
way[cycleway:left][cycleway:left^=opposite_][inside("NL")],
way[cycleway:right][cycleway:right^=opposite_][inside("NL")],
way[cycleway:both][cycleway:both^=opposite_][inside("NL")] {
  throwWarning: tr("{0} is deprecated", "{0.value}");
  group: tr("NL deprecated features");
  suggestAlternative: "oneway:bicycle/mofa/moped=no + {0.key}=*[zonder opposite_]";
}


/* sidewalk=none */
/* https://forum.openstreetmap.org/viewtopic.php?id=58656 */
way[sidewalk=none][inside("NL")] {
  throwWarning: tr("{0} is deprecated", "{0.tag}");
  group: tr("NL deprecated features");
  suggestAlternative: "sidewalk=no";
  fixAdd: "{0.key}=no";
}


/* associatedStreet */
/* https://forum.openstreetmap.org/viewtopic.php?id=70631 */
relation[type=associatedStreet][inside("NL")]  {
  throwWarning: tr("{0} is deprecated", "{0.tag}");
  group: tr("NL deprecated features");
  suggestAlternative: "type=street";
  suggestAlternative: "geen relatie";
}


/* postal_code */
/* https://forum.openstreetmap.org/viewtopic.php?id=73675 */
way[postal_code][inside("NL")] {
  throwWarning: tr("{0} is deprecated", "{0.tag}");
  group: tr("NL deprecated features");
  suggestAlternative: "addr:postcode via BAG imports on addresses";
}


/* building=terrace instead of multiple building=house (or leisure=outdoor_seating) */
/* https://forum.openstreetmap.org/viewtopic.php?id=74992 */
way[building=terrace][inside("NL")] {
  throwWarning: tr("Rijtjeshuizen ({0}) worden in Nederland individueel geïmporteerd uit de BAG", "{0.tag}");
  group: tr("NL deprecated features");
  suggestAlternative: "building=house via een BAG importverzoek voor huizen";
  suggestAlternative: "leisure=outdoor_seating voor 'terrasjes'";
}


/* is_in */
/* https://forum.openstreetmap.org/viewtopic.php?id=73675 */
*[is_in=NL],
*[is_in:country][inside("NL")],
*[is_in:city][inside("NL")],
*[is_in:province][inside("NL")],
*[is_in:continent][inside("NL")],
*[is_in:country_code=NL] {
  throwWarning: tr("{0} is deprecated", "{0.tag}");
  group: tr("NL deprecated features");
  fixRemove: "{0.key}";
}


/* --------------------------- */
/* ---------- Names ---------- */
/* --------------------------- */

/* Descriptive (Dutch) names */
way[name][highway=service][name=~/(?i)(parkeren$|parkeerplaats$|^toegang(sweg)?\s|^richting\s|^naar\s|\svoor\s|drive.thro?u(gh)?)/],
way[name][highway][name=~/(?i)(^|\sen\s)((on)?verplicht\s)?(\(?brom\)?)?fietspad$/],
way[name][highway][name=~/(?i)^(ruiterpad|roltrap(pen)?)$/],
way[name][highway][name=~/(?i)(rolstoel|invaliden)/],
way[name][highway][name=~/(?i)bus\s?(baan|strook)/][highway!=busway][highway!=service][highway!=construction],
node[name][highway][name=~/(?i)^(lift)$/],
node[amenity=drinking_water][name=~/(?i)(drinkwater|\swater|kraan)/],
*[name][amenity^=parking][name=~/(?i)(parkeren|parkeerplaats|parkeergarage|^garage)$/],
*[name][name=~/(?i)^gratis\s|gratis\)/],
*[name][name=~/(?i)klanten|bezoek(ers)?|medewerkers/][!route],
*[name][leisure=playground][name=~/(?i)^speeltuin$/],
*[name][leisure=pitch][name=~/(?i)ball?(veld(je)?)?$/][!sport] {
  throwWarning: tr("descriptive name");
  group: tr("NL naamgeving");
}

*[name][name=~/(?i)(voormalige)/][!historic][tourism!=information][!landuse] {
  throwWarning: tr("Beschrijvende naam");
  group: tr("NL naamgeving");
  suggestAlternative: "old_name=*";
  suggestAlternative: "description=*";
}


/* Street- or railway names with abbreviations */
way[name][highway][name=~/^(Burg|Dr|Drs|Ds|Ing|Ir|Mr|Past|Prof|St) [A-Za-z]/],
node[addr:street][addr:street=~/^(Burg|Dr|Drs|Ds|Ing|Ir|Mr|Past|Prof|St) [A-Z]/],
way[name][highway][name=~/[A-Z][a-z]+\./],
node[addr:street][addr:street=~/[A-Z][a-z]+\./] {
  throwWarning: tr("Straatnaam met afkorting");
  group: tr("NL naamgeving");
}

*[railway][name][name=~/(?i)(aansl|empl|goed|ind|inhaalsp|opstel|overloopw|racc|rang|terr)(\.| |\)|$)/] {
  throwWarning: tr("Spoorgebied met afgekorte naam");
  group: tr("NL naamgeving");
  suggestAlternative: "aansluiting, emplacement, goederen, industrieterrein, inhaalspoor, opstelterrein, overloopwissel, raccordement of rangeerterrein";	
}


/* Nederlandse naam zonder name */
*[name:nl][!name][inside("NL")][type!=route] {
  throwWarning: tr("{0} without {1}", "{0.key}", "{1.key}");
  group: tr("NL naamgeving");
  suggestAlternative: "name";
  fixChangeKey: "{0.key}=>{1.key}";
}


/* --------------------------- */
/* --------- Erfgoed --------- */
/* --------------------------- */

*[heritage=1][heritage:operator!=whc],
*[heritage=2][heritage:operator!=rce][inside("NL")] {
  throwWarning: tr("{0} without {1}", "{0.tag}", "{1.tag}");
  group: tr("NL erfgoed");
  fixAdd: "{1.tag}";
}
*[ref:rce][!heritage:operator] {
  throwWarning: tr("{0} without {1}", "{0.tag}", "{1.key}=*");
  group: tr("NL erfgoed");
  fixAdd: "heritage:operator=rce";
}
*[heritage:operator=rce][!heritage] {
  throwWarning: tr("{0} without {1}", "{0.tag}", "{1.key}=*");
  group: tr("NL erfgoed");
  fixAdd: "heritage=2";
}


/* ----------------------------- */
/* ------ Route relations ------ */
/* ----------------------------- */

/* Public transport routes should be in a route_master relation; busses also in a consession network relation */
relation[route_master] > relation[route] {
  set .hasRouteMaster;
}
relation[network] > relation[route_master] {
  set .hasNetworkRelation;
}
relation[route][route=~/^((trolley)?bus|light_rail|subway|train|tram)$/][inside("NL")]!.hasRouteMaster:new {
  throwWarning: tr("{0} not in route_master relation", "{0.tag}");
  group: tr("NL routes");
}
relation[route_master][route_master=~/^(trolley)?bus$/][inside("NL")]!.hasNetworkRelation:new {
  throwWarning: tr("{0} not in network relation", "{0.tag}");
  group: tr("NL routes");
}


/* --------------------------- */
/* ----- Maximumsnelheid ----- */
/* --------------------------- */

/* Maximum speeds per road defaults and signage */
way[highway=living_street][maxspeed!=15][!/^maxspeed(:forward|:backward|:both_ways)?$/][inside("NL")],
way[maxspeed:type="NL:zone30"][maxspeed!=30][maxspeed:both_ways!=30][highway],
way[maxspeed:type="NL:zone60"][maxspeed!=60][maxspeed:both_ways!=60][highway],
way[maxspeed:type][!maxspeed][maxspeed:type^="NL:zone"][!maxspeed:both_ways][maxspeed:type!~/^NL:zone[36]0$/][highway],
way[maxspeed:type="NL:urban"][maxspeed!=50][maxspeed:both_ways!=50][highway],
way[maxspeed:type="NL:rural"][maxspeed!=80][maxspeed:both_ways!=80][highway],
way[traffic_sign][!maxspeed][traffic_sign^="NL:A1-"][!/^maxspeed(:forward|:backward|:both_ways)?(:conditional)?$/][highway],
way[traffic_sign][!maxspeed][traffic_sign^="NL:A01-"][!/^maxspeed(:forward|:backward|:both_ways)?(:conditional)?$/][highway] {
  throwWarning: tr("{0} without {1}", "{0.tag}", "{1.tag}");
  group: tr("NL maximumsnelheden");
}


/* The majority voted to use maxspeed=100 as the default, and maxspeed:conditional=* for the night-time speed on autosnelwegen */
/* https://forum.openstreetmap.org/viewtopic.php?id=68803 */
way[highway=motorway][maxspeed][maxspeed=~/^1[23]0$/][maxspeed:conditional=~/100.+19:00/][inside("NL")] {
  throwWarning: tr("Agreed upon was to use 100 as the maximum speed and {0} as the conditional maximum speed", "{1.value}");
  group: tr("NL maximumsnelheden");
}


/* Mopeds aren't allowed faster than 40 on cycleways (mofas by definition 25) */ 
way[highway=cycleway][maxspeed][maxspeed>40][!motor_vehicle][!vehicle][!access][inside("NL")] {
  throwWarning: tr("{0} together with {1}", "{0.tag}", "{1.tag}");
  group: tr("NL maximumsnelheden");
}


/* ---------------------------- */
/* ---------- Overig ---------- */
/* ---------------------------- */

/* Finishing date without opening_date; adding it allows it to be spotted when completed */
way[highway=construction][note=~/(?i)202[0-9]|'2[0-9]|jan|feb|maart|mar|apr|mei|may|jun|jul|aug|sep|okt|oct|nov|dec/][!opening_date],
way[construction][note=~/(?i)202[0-9]|'2[0-9]|jan|feb|maart|mar|apr|mei|may|jun|jul|aug|sep|okt|oct|nov|dec/][!opening_date][highway][highway!=construction] {
  throwWarning: tr("{0} and {1} without {2}", "{0.tag}", "{1.key}", "{2.key}");
  group: tr("NL overige problemen");
}


/* In practically all cases, oneway:bicycle=no (uitgezonderd fietsers) implies oneway:mofa=no too */
way[oneway:bicycle?!][!oneway:mofa][oneway?] {
  throwWarning: tr("{0} without {1}", "{0.tag}", "{1.key}");
  group: tr("NL overige problemen");
}


/* In practically all cases, something that applies to mopeds and bicycles, also applies to mofa's */
way[bicycle:forward][moped:forward][bicycle:forward=*"moped:forward"][!mofa][!mofa:forward][bicycle:forward!=designated][bicycle:forward!=yes],
way[bicycle:backward][moped:backward][bicycle:backward=*"moped:backward"][!mofa][!mofa:backward][bicycle:backward!=designated][bicycle:backward!=yes],
way[bicycle:both_ways][moped:both_ways][bicycle:both_ways=*"moped:both_ways"][!mofa][!mofa:both_ways][bicycle:both_ways!=designated][bicycle:both_ways!=yes],
way[bicycle][moped][bicycle=*moped][!mofa][bicycle!=designated][bicycle!=yes] {
  throwWarning: tr("{0} and {1} without {2}", "{0.tag}", "{1.tag}", "{3.key}={0.value}");
  group: tr("NL overige problemen");
  fixAdd: "{3.key}={0.value}";
}
