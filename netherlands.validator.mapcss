meta {
    title: "Dutch specific rules";
    version: "2022.02.01.2";
    description: "Rules for The Netherlands only.";
    author: "Famlam";
    min-josm-version: "11424"; /* due to territory selectors */
    baselanguage: "nl";
}


/* Traffic signs - moped/mofa access cycleways */
/* (Permitting yes rather than designated to prevent overflooding with errors) */
way[highway=cycleway][traffic_sign="NL:G11"][moped][moped=~/^(yes|designated)$/],
way[highway=cycleway][traffic_sign="NL:G12a"][moped][moped=~/^(no|use_sidepath)$/],
way[highway=cycleway][traffic_sign="NL:G13"][moped][moped=~/^(yes|designated)$/],
way[highway=cycleway][traffic_sign="NL:G13"][mofa][mofa=~/^(yes|designated)$/],
way[highway][traffic_sign="NL:D103"][moped][moped=~/^(no|use_sidepath)$/],
way[highway][traffic_sign="NL:D104"][moped][moped=~/^(no|use_sidepath)$/] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} together with {1}", "{1.tag}", "{2.tag}");
}

way[highway][traffic_sign="NL:D103"][!moped],
way[highway][traffic_sign="NL:D104"][!moped],
way[highway=cycleway][traffic_sign="NL:G12a"][!moped] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} without {1}", "{1.tag}", "moped=designated");
}

way[highway=cycleway][traffic_sign="NL:G13"][!mofa][!motor_vehicle][!access] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} without {1}", "{1.tag}", "mofa=no");
}


/* Traffic sign - road types */
way[highway][traffic_sign="NL:G5"][highway!=living_street][highway!=construction],
way[highway][traffic_sign="NL:G05"][highway!=living_street][highway!=construction],
way[highway][traffic_sign="NL:G7"][highway!=footway][highway!=steps][highway!=pedestrian][highway!=construction],
way[highway][traffic_sign="NL:G07"][highway!=footway][highway!=steps][highway!=pedestrian][highway!=construction],
way[highway][traffic_sign="NL:G9"][highway!=bridleway][highway!=construction],
way[highway][traffic_sign="NL:G09"][highway!=bridleway][highway!=construction],
way[highway][traffic_sign="NL:G11"][highway!=cycleway][highway!=construction],
way[highway][traffic_sign="NL:G12a"][highway!=cycleway][highway!=construction],
way[highway][traffic_sign="NL:G13"][highway!=cycleway][highway!=construction] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} together with {1}", "{1.tag}", "{0.tag}");
}

way[highway][traffic_sign="NL:L51"][!cyclestreet][highway!=construction] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} without {1}", "{1.tag}", "cyclestreet=yes");
}


/* Traffic signs - access prohibited */
way[highway][traffic_sign="NL:C1"][!vehicle][!access],
way[highway][traffic_sign="NL:C01"][!vehicle][!access]
way[highway][traffic_sign="NL:C6"][!motor_vehicle][!vehicle][!access],
way[highway][traffic_sign="NL:C06"][!motor_vehicle][!vehicle][!access],
way[highway][traffic_sign="NL:C7"][!hgv],
way[highway][traffic_sign="NL:C07"][!hgv],
way[highway][traffic_sign="NL:C9"][!bicycle],
way[highway][traffic_sign="NL:C9"][!moped],
way[highway][traffic_sign="NL:C09"][!bicycle],
way[highway][traffic_sign="NL:C09"][!moped],
way[highway][traffic_sign="NL:C10"][!trailer],
way[highway][traffic_sign="NL:C11"][!motorcycle],
way[highway][traffic_sign="NL:C12"][!motor_vehicle][!vehicle][!access],
way[highway][traffic_sign="NL:C13"][!moped],
way[highway][traffic_sign="NL:C14"][!bicycle],
way[highway][traffic_sign="NL:C15"][!bicycle],
way[highway][traffic_sign="NL:C15"][!moped],
way[highway][traffic_sign="NL:C16"][!foot][!access][!vehicle] {
  group: tr("NL traffic signs");
  throwWarning: tr("{0} zonder {1}=no (or private or destination or ...)", "{1.tag}", "{2.key}");
}


/* Phone numbers - preceding zeros */
node[contact:phone=~/^(00|\+)31 ?0/][inside("NL")],
node[contact:mobile=~/^(00|\+)31 ?0/][inside("NL")],
node[phone=~/^(00|\+)31 ?0/][inside("NL")] {
  throwWarning: tr("Invalid {0}: country code should not be followed by a 0", "{0.key}");
  group: tr("NL addresses and contacts");
  assertMatch: "node phone=\"+31 06123456789\"";
  assertMatch: "node phone=\"003106123456789\"";
  assertNoMatch: "node phone=\"00316123456789\"";
  assertNoMatch: "node phone=\"+31 6123456789\"";
  assertNoMatch: "node phone=\"06123456789\"";
  set .badPhoneNumber;
}

/* Phone numbers - too many digits */
node[contact:phone=~/^(0031|\+31|0)( ?[1-9])( ?[0-9]){9}/][inside("NL")]!.badPhoneNumber,
node[contact:mobile=~/^(0031|\+31|0)( ?[1-9])( ?[0-9]){9}/][inside("NL")]!.badPhoneNumber,
node[phone=~/^(0031|\+31|0)( ?[1-9])( ?[0-9]){9}/][inside("NL")]!.badPhoneNumber {
  throwWarning: tr("Invalid {0}: too many digits (or foreign number, if so: ignore)", "{0.key}");
  group: tr("NL addresses and contacts");
  assertMatch: "node phone=\"+316123456789\"";
  assertMatch: "node phone=\"+31 6 123456789\"";
  assertMatch: "node phone=\"06 123456789\"";
  assertNoMatch: "node phone=\"0031612345678\"";
  assertNoMatch: "node phone=\"+31 6 12345678\"";
  assertNoMatch: "node phone=\"06 12345678\"";
}


/* Unwanted German style cycleway tagging */
/* https://forum.openstreetmap.org/viewtopic.php?id=65612 */
way[cycleway:surface][surface][highway=cycleway][surface=*"cycleway:surface"],
way[footway:surface][surface][highway=footway][surface=*"footway:surface"] {
  throwWarning: tr("{0} together with {1} and {2}. Remove {0}.", "{0.key}", "{1.key}", "{2.tag}");
  group: tr("NL surface tagging");
  fixRemove: "{0.key}";
}
way[cycleway:surface][surface][highway=cycleway][surface!=*"cycleway:surface"],
way[footway:surface][surface][highway=footway][surface!=*"footway:surface"] {
  throwWarning: tr("{0} and {1} together with {2} and conflicting values", "{0.key}", "{1.key}", "{2.tag}");
  group: tr("NL surface tagging");
}
way[cycleway:surface][highway=cycleway][!surface],
way[footway:surface][highway=footway][!surface] {
  throwWarning: tr("{0} together with {1}", "{0.key}", "{1.tag}");
  group: tr("NL surface tagging");
  suggestAlternative: "surface=*";
  fixChangeKey: "{0.key}=>surface";
}
way[footway:surface][cycleway:surface][segregated=no][highway][footway:surface!=*"cycleway:surface"] {
  throwWarning: tr("{0} and {1} together with {2} and conflicting values", "{0.key}", "{1.key}", "{2.tag}");
  group: tr("NL surface tagging");
}
